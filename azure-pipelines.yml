# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

#pool:
#  vmImage: ubuntu-latest

variables:
  - name: hyperspace.azure.pool.name.mshosted
    value: "Azure Pipelines"
  - name: hyperspace.azure.pool.name.selfhosted
    value: "Self-hosted"
  - name: hyperspace.azure.pool.vmImage.ubuntu
    value: "ubuntu-latest"
  - name: hyperspace.piper.version
    value: "latest"
  - name: hyperspace.sappiper.version
    value: "latest"
  - name: hyperspace.piper.nextGenStageConditions
    value: true
  - name: hyperspace.github.serviceConnectionName
    value: "github.tools.sap"


#steps:
#  - script: echo Hello, world!
#    displayName: 'Run a one-line script'
#
#  - script: |
#      ls -la
#    displayName: 'Run a multi-line script'
#  - script: |
#      ifconfig
#    displayName: 'My private IP'
#  - script: |
#      curl ifconfig.me/all
#    displayName: 'My Host IP'
#  - task: Gradle@2
#    inputs:
#      workingDirectory: ''
#      gradleWrapperFile: 'gradlew'
#      gradleOptions: '-Xmx3072m'
#      javaHomeOption: 'JDKVersion'
#      jdkVersionOption: '17'
#      jdkArchitectureOption: 'x64'
#      publishJUnitResults: true
#      testResultsFiles: '**/TEST-*.xml'
#      tasks: 'build'

stages:
  - stage: Azure_Pipelines_Agent
    displayName: Azure-Pipelines-agent
    pool:
      name: "$(hyperspace.azure.pool.name.mshosted)"
      vmImage: "$(hyperspace.azure.pool.vmImage.ubuntu)"
    jobs:
      - job: BuildStep1
        displayName: Build Step 1
        steps:
          - bash: |
              echo "Dummy Build Step - 1"
              printenv
              echo "Dummy Build Step - 2"
              curl ifconfig.me/all
  - stage: Self_Hosted_Agent
    displayName: Self-hosted agent
    pool:
      name: "$(hyperspace.azure.pool.name.selfhosted)"
    jobs:
      - job: BuildStep2
        displayName: Build Step 2
        steps:
          - bash: |
              echo "Dummy Build Step - 1"
              printenv
              echo "Dummy Build Step - 2"
              curl ifconfig.me/all
