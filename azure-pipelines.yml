# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

#pool:
#  vmImage: ubuntu-latest

variables:
  - name: hyperspace.azure.pool.name.mshosted
    value: "Azure Pipelines"
  - name: hyperspace.azure.pool.name.selfhosted
    value: "Self-hosted"
  - name: hyperspace.azure.pool.vmImage.ubuntu
    value: "ubuntu-latest"
  - name: hyperspace.piper.version
    value: "latest"
  - name: hyperspace.sappiper.version
    value: "latest"
  - name: hyperspace.piper.nextGenStageConditions
    value: true
  - name: hyperspace.github.serviceConnectionName
    value: "github.tools.sap"


steps:
  - script: echo Hello, world!
    displayName: 'Run a one-line script'

  - script: |
      ls -la
    displayName: 'Run a multi-line script'
  - script: |
      ifconfig
    displayName: 'My private IP'
  - stage: Azure Pipelines Agent
    displayName: Print env
    pool:
      name: "$(hyperspace.azure.pool.name.mshosted)"
      vmImage: "$(hyperspace.azure.pool.vmImage.ubuntu)"
    jobs:
      - job: BuildStep
        displayName: Placeholder Build Step
        steps:
          - bash: |
              echo "Dummy Build Step - ENV"
              printenv
               echo "Dummy Build Step - IP"
              curl ifconfig.me/all
  - stage: Self-hosted Agent
    displayName: Print env
    pool:
      name: "$(hyperspace.azure.pool.name.mshosted)"
      vmImage: "$(hyperspace.azure.pool.vmImage.ubuntu)"
    jobs:
      - job: BuildStep
        displayName: Placeholder Build Step
        steps:
          - bash: |
              echo "Dummy Build Step - ENV"
              printenv
               echo "Dummy Build Step - IP"
              curl ifconfig.me/all
  - script: |
      curl ifconfig.me/all
    displayName: 'Azure Pipelines Agent - script'
  - script: |
      curl ifconfig.me/all
    displayName: 'Self-hosted Agent - script'
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '17'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'build'
